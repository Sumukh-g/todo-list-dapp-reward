{
  "contractName": "Financable",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Accounting and banking helper functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Financable.sol\":\"Financable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"project:/contracts/Financable.sol\":{\"keccak256\":\"0x3ea80fbf80a6d258afcde6d12c7082fa33322ad9abc1b6241fd7ca8da9379d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://940a3f67922ca2e348b2b996ef90e67f5c33f24849ac4bf273cdc6f253d541c7\",\"dweb:/ipfs/QmXZfneCGoD1VBCKoppvPhf4bNEqwXVamG5rDhm2xzVki1\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50600160008190555060488060256000396000f3fe608060405236600d57600080fd5b600080fdfea26469706673582212200faba5e3f24401ccc2ec322ed8809b05ae56260c82709e002f1045fabd6177c864736f6c63430008000033",
  "deployedBytecode": "0x608060405236600d57600080fd5b600080fdfea26469706673582212200faba5e3f24401ccc2ec322ed8809b05ae56260c82709e002f1045fabd6177c864736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "186:442:4:-:0;;;;;;;;;;;;;1637:1:2;1742:7;:22;;;;186:442:4;;;;;;",
  "deployedSourceMap": "186:442:4:-:0;;;;;;603:8;;;186:442;543:8;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/// @title Accounting and banking helper functions\r\ncontract Financable is ReentrancyGuard {\r\n\r\n    /// @notice Send user defined amount\r\n    /// @param amount Amount to send to user in wei\r\n    function payUser(uint amount) nonReentrant internal {\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    // Fallback funciton\r\n    // No direct payment allowed\r\n    fallback() external payable {\r\n        revert();\r\n    }\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n    \r\n}",
  "sourcePath": "C:\\Users\\cenas\\Downloads\\todo-list-dapp-reward\\blockchain\\contracts\\Financable.sol",
  "ast": {
    "absolutePath": "project:/contracts/Financable.sol",
    "exportedSymbols": {
      "Financable": [
        296
      ],
      "ReentrancyGuard": [
        235
      ]
    },
    "id": 297,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 259,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 260,
        "nodeType": "ImportDirective",
        "scope": 297,
        "sourceUnit": 236,
        "src": "68:62:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 262,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 235,
              "src": "209:15:4"
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "209:15:4"
          }
        ],
        "contractDependencies": [
          235
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 261,
          "nodeType": "StructuredDocumentation",
          "src": "134:52:4",
          "text": "@title Accounting and banking helper functions"
        },
        "fullyImplemented": true,
        "id": 296,
        "linearizedBaseContracts": [
          296,
          235
        ],
        "name": "Financable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "381:55:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "421:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 273,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "400:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "400:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "392:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "392:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "392:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "392:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "392:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "392:36:4"
                }
              ]
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "234:89:4",
              "text": "@notice Send user defined amount\n @param amount Amount to send to user in wei"
            },
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 269,
                "modifierName": {
                  "id": 268,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 234,
                  "src": "359:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "359:12:4"
              }
            ],
            "name": "payUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "346:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "345:13:4"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:4"
            },
            "scope": 296,
            "src": "329:107:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "532:27:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 284,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "543:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "543:8:4"
                }
              ]
            },
            "id": 288,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:4"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:4"
            },
            "scope": 296,
            "src": "504:55:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "592:27:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 291,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "603:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "603:8:4"
                }
              ]
            },
            "id": 295,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "572:2:4"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:4"
            },
            "scope": 296,
            "src": "565:54:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 297,
        "src": "186:442:4"
      }
    ],
    "src": "33:595:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1745622193993": {
      "events": {},
      "links": {},
      "address": "0xc4116eCe94267d820E9A9008803B234053Aaa0c5",
      "transactionHash": "0xbba045e3433d25bc0a8fa2129a1b7ecd452e7055ab528b7158d5b77b57f69511"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-26T01:25:42.338Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Accounting and banking helper functions",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}